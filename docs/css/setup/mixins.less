.text-color-for(@color) when (100 < luma(@color)) {
  color: white;
}
.text-color-for(@color) when (100 > luma(@color)) {
  color: black;
}

.faded-text-color-for(@color) when (luma(@color) < 0.2) {
  color: #f4f4f4;
}
.faded-text-color-for(@color) when (luma(@color) >= 0.2) {
  color: #333333;
}


.logo-color(@footwork-color, @js-color, @foot-color) {
  .footwork {
    path {
      fill: @footwork-color;
      .transition(fill 0s linear);
    }
  }
  .js {
    path {
      fill: @js-color;
      .transition(fill 0s linear);
    }
  }
  .foot {
    path {
      fill: @foot-color;
      .transition(fill 0s linear);
    }
  }
}

.border-radius(@value1, @value2:X, ...) {
  @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
  -moz-border-radius: @value;
  -webkit-border-radius: @value;
  border-radius: @value;
}

.box-shadow(@value1, @value2:X, ...) {
  @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
  -moz-box-shadow: @value;
  -webkit-box-shadow: @value;
  box-shadow: @value;
}

.transition(@value1, @value2:X, ...) {
  @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
  -webkit-transition: @value;
  -moz-transition: @value;
  -ms-transition: @value;
  -o-transition: @value;
  transition: @value;
}

.vendor-transition(@value) {
  -webkit-transition: ~"-webkit-@{value}";
  -moz-transition: ~"-moz-@{value}";
  -ms-transition: ~"-ms-@{value}";
  -o-transition: ~"-o-@{value}";
  transition: ~"@{value}";
}

.transform(@value1, @value2:X, ...) {
  @value: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
  -webkit-transform: @value;
  -moz-transform: @value;
  -ms-transform: @value;
  -o-transform: @value;
  transform: @value;
}

.transform-style(@value) {
  -webkit-transform-style: @value;
  -moz-transform-style: @value;
  -ms-transform-style: @value;
  -o-transform-style: @value;
  transform-style: @value;
}

.transform-origin(@valueX, @valueY, @valueZ) {
  -webkit-transform-origin: @valueX @valueY @valueZ;
  -moz-transform-origin: @valueX @valueY @valueZ;
  -ms-transform-origin: @valueX @valueY @valueZ;
  -o-transform-origin: @valueX @valueY @valueZ;
  transform-origin: @valueX @valueY @valueZ;
}

.perspective(@value) {
  -webkit-perspective: @value;
  -moz-perspective: @value;
  -ms-perspective: @value;
  -o-perspective: @value;
  perspective: @value;
}

.transform-style(@value) {
  -webkit-transform-style: @value;
  -moz-transform-style: @value;
  -ms-transform-style: @value;
  -o-transform-style: @value;
  transform-style: @value;
}

.filter(@value) {
  -webkit-filter: @value;
  -moz-filter: @value;
  -ms-filter: @value;
  -o-filter: @value;
  filter: @value;
}

.backface-visibility(@value) {
  -webkit-backface-visibility: @value;
  -moz-backface-visibility: @value;
  -ms-backface-visibility: @value;
  -o-backface-visibility: @value;
  backface-visibility: @value;
}

.clearfix {
  display: inline-block;

  &:after {
    content: ".";
    display: block;
    clear: both;
    visibility: hidden;
    line-height: 0;
    height: 0;
  }
}

.block {
  display: block !important;
}

.clearblock {
  display: block;

  &:after {
    content: ".";
    display: block;
    clear: both;
    visibility: hidden;
    line-height: 0;
    height: 0;
  }
}

.box-sizing(@def) {
  box-sizing: @def;
  -moz-box-sizing: @def;
  -webkit-box-sizing: @def;
}

.no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: moz-none;
  -ms-user-select: none;
  user-select: none;
}

.animation (@name, @duration: 300ms, @delay: 0, @timing: ease, @iteration: 1) {
  -moz-animation-name: @name;
  -moz-animation-duration: @duration;
  -moz-animation-delay: @delay;
  -moz-animation-iteration-count: @iteration;
  -moz-animation-timing-function: @timing;
  
  -webkit-animation-name: @name;
  -webkit-animation-duration: @duration;
  -webkit-animation-delay: @delay;
  -webkit-animation-iteration-count: @iteration;
  -webkit-animation-timing-function: @timing;
  
  -ms-animation-name: @name;
  -ms-animation-duration: @duration;
  -ms-animation-delay: @delay;
  -ms-animation-iteration-count: @iteration;
  -ms-animation-timing-function: @timing;
  
  -o-animation-name: @name;
  -o-animation-duration: @duration;
  -o-animation-delay: @delay;
  -o-animation-iteration-count: @iteration;
  -o-animation-timing-function: @timing;
  
  animation-name: @name;
  animation-duration: @duration;
  animation-delay: @delay;
  animation-iteration-count: @iteration;
  animation-timing-function: @timing;
}

/*---------------------------------------------------
    LESS Elements 0.9.
    Borrowed mixins: .gradient()
  ---------------------------------------------------
    A set of useful LESS mixins
    More info at: http://lesselements.com
  ---------------------------------------------------*/
.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
  background: @color;
  background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, @start),
                               color-stop(1, @stop));
  background: -ms-linear-gradient(bottom,
                                  @start,
                                  @stop);
  background: -moz-linear-gradient(center bottom,
                                   @start 0%,
                                   @stop 100%);
  background: -o-linear-gradient(@stop,
                                 @start);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}